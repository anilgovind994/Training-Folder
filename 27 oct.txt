interface - more than one abstract method - java 7
from java 8 we can have method implementation as well 
default and static methods

 

marker interface - no methods

 

Java 8 
functional interface - only one abstract method
we can have method implementation as well 
default and static methods
 
Functional inteface
lambda expressions
//()->{};
////lambda expressions
//()->{};
//single line no need to use curly brackets
//multiple line logic in curly brackets
//if different data types need to specify the type in signature
//same datatype no need to mention in param signature


predefined interface





creathing thread using implement runnable to lambda xpression


Thread th = new Thread(()->System.out.println("hello"));
        th.start();

// Lambda Runnable
		Runnable task = () -> { System.out.println("Task is running"); };
		 
		// start the thread
		new Thread(task).start();
		
		Thread thread1 = new Thread(new Runnable() {
		    @Override
		    public void run(){
		        System.out.println("Task #1 is running");
		    }
		});
		 
		thread1.start();
------------------------------------------------
//stream api: works on collection and it provides additional apis to perfom additional operations

lst.stream().forEach(System.out::println);

lst.stream().filter((a)->{
return a.equals("4");}).forEach(System.out::println);
	

lst.stream().map((e)->{
return Integer.parseInt(e);}).forEach(System.out::println);
	

