1. How do Arraylist , set hashmap work internally
2. How to maintain an order in set
3. what is difference between arraylist and linked list
4. What is fail fast and fail safe
5. what is hashcode and equals and why to use it for collections  

1. How do Arraylist , set hashmap work internally?
a. Internally an ArrayList uses an Object[] . As you add items to an ArrayList ,        the list checks to see if the backing array has room left. If there is room, the   new item is just added at the next empty space. If there is not room, a new, larger, array is created, and the old array is copied into the new one.

Internally HashMap uses a hashCode of the key Object and this hashCode is further used by the hash function to find the index of the bucket where the new entry can be added. HashMap uses multiple buckets and each bucket points to a Singly Linked List where the entries (nodes) are stored.

2. How to maintain an order in set?
a.Use HashSet if you don't want to maintain any order of elements. 
   Use  LinkedHashSet if you want to maintain insertion order of elements.
   Use TreeSet if you want to sort the elements according to some                                              Comparator.

3. what is difference between arraylist and linked list
a.


4. What is fail fast and fail safe
a. Fail-safe iterators means they will not throw any exception even if the collection is modified while iterating over it. Whereas Fail-fast iterators throw an exception(ConcurrentModificationException) if the collection is modified while iterating over it.

5. what is hashcode and equals and why to use it for collections  
a. If two Objects are equal, according to the equals(Object) method, then hashCode() method must produce the same Integer on each of the two Objects.
>In java equals() method is used to compare equality of two Objects
>hashCode() method returns the hashcode value as an Integer. Hashcode value is mostly used in hashing based collections like HashMap, HashSet, HashTableâ€¦.etc. This method must be overridden in every class which overrides equals() method.
